# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.upload_directory: '%kernel.project_dir%/public/uploads' # Or your desired upload path
    app.api_url: 'http://127.0.0.1:8000'
services:

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../tests/'
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\PostService:
        arguments:
            $em: '@Doctrine\ORM\EntityManagerInterface'
            $projectDir: '%kernel.project_dir%'
            $uploadDirectory: '%app.upload_directory%'
            $slugger: '@slugger'
            $apiUrl: '%env(API_URL)%' # Hier verkn√ºpfen wir den Parameter
    # PasswordService mit konfigurierbarer Frontend-URL
    App\Service\PasswordService:
        arguments:
            $frontendUrl: '%env(FRONTEND_URL)%'

    # JWT Authenticator
    App\Security\JwtTokenAuthenticator:
        arguments:
            $jwtManager: '@Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface'
            $userProvider: '@security.user.provider.concrete.app_user_provider'
   
    App\Controller\ContactController:
        arguments:
            $contactFromEmail: '%env(CONTACT_FROM_EMAIL)%'
            $contactToEmail: '%env(CONTACT_TO_EMAIL)%'
            
    